import{az as n,o as e,c as i,k as u,e as c,aa as t,b as o,a6 as a,q as m,s as f,H as s}from"../modules/vue-qDBvoHgk.js";import{I as p}from"./default-BdmvwUgt.js";import{_ as d,aL as l}from"../index-Do_Fusig.js";import{p as h,u as _,f as v}from"./context-C-TBvdeV.js";import"../monaco/bundled-types-B2pegga4.js";import"../modules/file-saver-DY7lxZlc.js";import"../modules/shiki-BnrpArDE.js";const g=c("h1",null,"Error Handling: Our Options",-1),k={__name:"47",setup(E){return h(l),_(),(b,x)=>{const r=n("click");return e(),i(p,m(f(s(v)(s(l),46))),{default:u(()=>[g,c("ul",null,[t((e(),o("li",null,[a("die: dies (unrecoverable error)")])),[[r]]),t((e(),o("li",null,[a("catchAll: recovers from all recoverable errors, returns an Effect")])),[[r]]),t((e(),o("li",null,[a("catchTag: recovers from the specified tagged error")])),[[r]]),t((e(),o("li",null,[a("catchTags: recovers from the specified tagged errors")])),[[r]]),t((e(),o("li",null,[a("orElse: ignores the error and returns another effect")])),[[r]]),t((e(),o("li",null,[a("orElseFail: ignores the error and returns another error")])),[[r]]),t((e(),o("li",null,[a("mapError: maps the error(s) to another error")])),[[r]]),t((e(),o("li",null,[a("match: maps both success and error channels")])),[[r]]),t((e(),o("li",null,[a("matchEffect: like flatMap but for both channels")])),[[r]])])]),_:1},16)}}},F=d(k,[["__file","/@slidev/slides/47.md"]]);export{F as default};
